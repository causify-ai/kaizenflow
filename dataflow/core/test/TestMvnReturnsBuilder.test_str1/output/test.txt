nid_prefix=
get_config_template=
  filter_ath:
    col_mode: replace_all
    transformer_kwargs:
      start_time: 09:30:00
      end_time: 16:00:00
  resample:
    in_col_groups: [('close',), ('volume',)]
    out_col_group: ()
    transformer_kwargs:
      rule: 5T
      resampling_groups: [({'close': 'close'}, 'last', {}), ({'close': 'twap'}, 'mean', {}), ({'volume': 'volume'}, 'sum', {'min_count': 1})]
      vwap_groups: [('close', 'volume', 'vwap')]
    reindex_like_input: False
    join_output_with_input: False
  compute_ret_0:
    in_col_groups: [('close',), ('vwap',), ('twap',)]
    out_col_group: ()
    transformer_kwargs:
      mode: log_rets
    col_mapping:
      close: close.ret_0
      vwap: vwap.ret_0
      twap: twap.ret_0
dag=
  name=None
  mode=strict
  json=
    {
        "directed": true,
        "graph": {},
        "links": [
            {
                "df_in": "df_out",
                "source": "filter_weekends",
                "target": "filter_ath"
            },
            {
                "df_in": "df_out",
                "source": "filter_ath",
                "target": "resample"
            },
            {
                "df_in": "df_out",
                "source": "resample",
                "target": "compute_ret_0"
            }
        ],
        "multigraph": false,
        "nodes": [
            {
                "id": "filter_weekends",
                "stage": "ColumnTransformer"
            },
            {
                "id": "filter_ath",
                "stage": "ColumnTransformer"
            },
            {
                "id": "resample",
                "stage": "GroupedColDfToDfTransformer"
            },
            {
                "id": "compute_ret_0",
                "stage": "GroupedColDfToDfTransformer"
            }
        ]
    }