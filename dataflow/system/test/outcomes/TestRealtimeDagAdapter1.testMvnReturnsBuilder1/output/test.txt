################################################################################
dag_builder
################################################################################
  nid_prefix=
################################################################################
dag_adapter
################################################################################
  dag_builder=
    nid_prefix=
  overriding_config=
    load_prices: {'source_node_name': 'RealTimeDataSource', 'source_node_kwargs': {'market_data': <market_data.replayed_market_data.ReplayedMarketData object>, 'timedelta': Timedelta('0 days 00:05:00'), 'asset_id_col': 'asset_id', 'multiindex_output': True}}
    process_forecasts: {'prediction_col': 'close', 'volatility_col': 'close', 'spread_col': None, 'portfolio': <oms.portfolio.DataFramePortfolio object>, 'process_forecasts_config': order_config:
      order_type: price@twap
      order_duration: 5
    optimizer_config:
      backend: pomo
      bulk_frac_to_remove: 0.0
      bulk_fill_method: zero
      target_gmv: 100000.0
    ath_start_time: 09:30:00
    trading_start_time: 09:30:00
    ath_end_time: 16:40:00
    trading_end_time: 16:40:00
    execution_mode: real_time
    log_dir: None, 'evaluate_forecasts_config': None}
  nodes_to_insert=
    ('load_prices', <function data_source_node_factory at 0x>)
  nodes_to_append=
    ('process_forecasts', <class 'dataflow.system.sink_nodes.ProcessForecasts'>)
################################################################################
final dag
################################################################################
name=None
mode=strict
nodes=[('rets/filter_weekends', {'stage': <dataflow.core.nodes.transformers.ColumnTransformer object at 0x>}), ('rets/filter_ath', {'stage': <dataflow.core.nodes.transformers.ColumnTransformer object at 0x>}), ('rets/resample', {'stage': <dataflow.core.nodes.transformers.FunctionWrapper object at 0x>}), ('rets/compute_ret_0', {'stage': <dataflow.core.nodes.transformers.ColumnTransformer object at 0x>}), ('rets/model_volatility', {'stage': <dataflow.core.nodes.volatility_models.VolatilityModel object at 0x>}), ('rets/clip', {'stage': <dataflow.core.nodes.transformers.ColumnTransformer object at 0x>}), ('load_prices', {'stage': <dataflow.system.source_nodes.RealTimeDataSource object at 0x>}), ('process_forecasts', {'stage': <dataflow.system.sink_nodes.ProcessForecasts object at 0x>})]
edges=[('rets/filter_weekends', 'rets/filter_ath', {'df_in': 'df_out'}), ('rets/filter_ath', 'rets/resample', {'df_in': 'df_out'}), ('rets/resample', 'rets/compute_ret_0', {'df_in': 'df_out'}), ('rets/compute_ret_0', 'rets/model_volatility', {'df_in': 'df_out'}), ('rets/model_volatility', 'rets/clip', {'df_in': 'df_out'}), ('rets/clip', 'process_forecasts', {'df_in': 'df_out'}), ('load_prices', 'rets/filter_weekends', {'df_in': 'df_out'})]
