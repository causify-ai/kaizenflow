run_leq_node:   0%|          | 0/7 [00:00<?, ?it/s]/app/dataflow/core/nodes/sources.py:295: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.df["volume"] = 10000  # type: ignore[index]
/app/dataflow/core/nodes/sources.py:296: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.df["bid"] = self.df["close"] - 0.01
/app/dataflow/core/nodes/sources.py:297: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.df["ask"] = self.df["close"] + 0.01
/app/dataflow/core/nodes/sources.py:298: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.df["bid_size"] = bid_volume
/app/dataflow/core/nodes/sources.py:299: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.df["ask_size"] = ask_volume
/app/dataflow/core/nodes/volatility_models.py:529: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.
  df_in.drop(df_out.columns.intersection(df_in.columns), 1),
run_leq_node:  86%|████████▌ | 6/7 [00:00<00:00, 40.21it/s]run_leq_node: 100%|██████████| 7/7 [00:00<00:00, 44.30it/s]
run_leq_node:   0%|          | 0/7 [00:00<?, ?it/s]/app/dataflow/core/nodes/volatility_models.py:529: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.
  df_in.drop(df_out.columns.intersection(df_in.columns), 1),
run_leq_node: 100%|██████████| 7/7 [00:00<00:00, 85.16it/s]
run_leq_node:   0%|          | 0/7 [00:00<?, ?it/s]/app/dataflow/core/nodes/volatility_models.py:529: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.
  df_in.drop(df_out.columns.intersection(df_in.columns), 1),
run_leq_node:  86%|████████▌ | 6/7 [00:00<00:00, 48.38it/s]run_leq_node: 100%|██████████| 7/7 [00:00<00:00, 52.77it/s]
run_leq_node:   0%|          | 0/7 [00:00<?, ?it/s]/app/dataflow/core/nodes/volatility_models.py:529: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.
  df_in.drop(df_out.columns.intersection(df_in.columns), 1),
run_leq_node: 100%|██████████| 7/7 [00:00<00:00, 83.26it/s]
