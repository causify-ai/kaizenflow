- name: Update APT
  apt:
    update_cache: yes

- name: Install packages (can take a couple of minutes if this the first of the playbook on the server because of the package size)
  apt:
    pkg: 
      - "{{ vnc_server_package }}" 
      - ubuntu-mate-desktop
    state: present

- name: Disable desktop environment animations
  become_user: "{{ vnc_user }}"
  block:
    - name: Enable reduced-resources setting
      shell: dbus-launch gsettings set org.mate.Marco.general reduced-resources true

    - name: Disable enable-animations setting
      shell: dbus-launch gsettings set org.gnome.desktop.interface enable-animations false
  when: 
    - disable_window_animations|bool  

- name: "Ensures path {{ user_home }}/.vnc/ exists"
  file: 
    path: "{{ user_home }}/.vnc/"
    state: directory
    owner: "{{ vnc_user }}"
    group: "{{ vnc_user }}"
    mode: 0700

- name: "Add read/write permissions to /tmp to other (prevents errors in vncserver)"
  file: 
    path: "/tmp"
    mode: o+rw

- name: Set VNC password (password is mandatory but vncserver might be later started without it)
  become_user: "{{ vnc_user }}"
  become: false
  shell:
    cmd: set -o pipefail ; printf "{{ lookup('password', password_terms) }}\n{{ lookup('password', password_terms) }}\n" | vncpasswd
    creates: "{{ user_home }}/.vnc/passwd"
    executable: /bin/bash

- name: Copy VNC configuration file
  copy:
    src: xstartup
    dest: "{{ user_home }}/.vnc/xstartup"
    mode: 0770
    owner: "{{ vnc_user }}"
    group: "{{ vnc_user }}"

- name: Get UID of user to calculate dektop number to assign
  shell: id -u "{{ vnc_user }}"
  register: user_uid

- debug:
    msg: "User UID is: {{ user_uid.stdout }}"

# Desktop number go from 1,2 etc. UIDs start from 1000
- set_fact:
    vnc_desktop_number: "{{ user_uid.stdout | int - 999 }}"

- name: Copy systemd service template
  template:
    src: vncserver.service.j2
    dest: "/etc/systemd/system/{{ vnc_user }}_vncserver.service"
    mode: 0644 
    owner: root
    group: root
    
- name: Enable VNC service
  systemd:
    name: "{{ vnc_user }}_vncserver"
    enabled: yes
    daemon-reload: yes

- name: Start VNC service
  service:
    name: "{{ vnc_user }}_vncserver"
    state: restarted

- debug:
    msg: "VNC_desktop_number is: {{ vnc_desktop_number }}"
   
- name: Save VNC URL info 
  run_once: true
  local_action:
    module: lineinfile
    dest: "{{ vnc_url_file_path }}"
    content: "{{ groups['all'] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) + ':' + {{ vnc_desktop_number|int + 5900 }} | join('\n') }}"
    create: yes