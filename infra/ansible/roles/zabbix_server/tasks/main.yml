---
- name: Update APT cache and upgrade all packages
  ansible.builtin.apt:
    upgrade: dist
    update_cache: true
  become: true

# Adding Zabbix official repository for Debian/Ubuntu
- name: Add Zabbix APT key
  ansible.builtin.apt_key:
    url: "https://repo.zabbix.com/zabbix-official-repo.key"
    state: present
  become: true

- name: Add Zabbix Official Repository
  ansible.builtin.get_url:
    url: "{{ zabbix_package_url }}"
    dest: "/tmp/zabbix-release.deb"
  become: true

- name: Install Zabbix deb
  ansible.builtin.apt:
    deb: "/tmp/zabbix-release.deb"
    state: present
  become: true

# Install necessary dependencies
- name: Install Zabbix Server and related packages
  ansible.builtin.package:
    name:
      - mysql-server
      - python3-pymysql
      - zabbix-server-mysql
      - zabbix-frontend-php
      - zabbix-apache-conf
      - zabbix-agent2
      - zabbix-sql-scripts
    state: present
    update_cache: true
  become: true

# Start and enable MySQL to ensure it's running for the Zabbix DB setup
- name: Ensure MySQL service is running and enabled
  ansible.builtin.systemd:
    name: mysql
    state: started
    enabled: true
  become: true

- name: Ensure MySQL root user and password are set
  community.mysql.mysql_user:
    name: "{{ mysql_db_user }}"
    password: "{{ mysql_db_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  become: true
  no_log: true

- name: Ensure .my.cnf exists for MySQL operations
  ansible.builtin.template:
    src: .my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: '0600'
  become: true

# Create Zabbix MySQL Database
- name: Create MySQL Zabbix database
  community.mysql.mysql_db:
    name: "{{ zabbix_db_name }}"
    encoding: utf8
    collation: utf8_bin
    state: present
  become: true

# Create Zabbix User in MySQL
- name: Create MySQL Zabbix user
  community.mysql.mysql_user:
    name: "{{ zabbix_db_user }}"
    password: "{{ zabbix_db_password }}"
    priv: "{{ zabbix_db_name }}.*:ALL"
    host: "{{ zabbix_db_host }}"
    state: present
  become: true
  no_log: true

- name: Check if Zabbix schema already exists
  community.mysql.mysql_query:
    query: SELECT COUNT(*) FROM information_schema.tables WHERE table_schema = '{{ zabbix_db_name }}' AND table_name = 'hosts';
    login_unix_socket: /var/run/mysqld/mysqld.sock
  register: zabbix_schema_exists
  become: true
  no_log: true

- name: Import Zabbix Server SQL schema into MySQL
  community.mysql.mysql_db:
    name: "{{ zabbix_db_name }}"
    state: import
    target: "/usr/share/zabbix-sql-scripts/mysql/server.sql.gz"
  become: true
  when: zabbix_schema_exists.query_result[0][0]['COUNT(*)'] == 0

# Copy Zabbix Server Configuration
- name: Copy Zabbix server configuration
  ansible.builtin.template:
    src: zabbix_server.conf.j2
    dest: "/etc/zabbix/zabbix_server.conf"
    mode: '0640'
  become: true
  notify:
    - Restart Zabbix Server

# Ensure Zabbix server service is running
- name: Start and Enable Zabbix Server
  ansible.builtin.systemd:
    name: zabbix-server
    state: started
    enabled: true
  become: true

# Ensure Zabbix agent service is running
- name: Start and Enable Zabbix Agent
  ansible.builtin.systemd:
    name: zabbix-agent2
    state: started
    enabled: true
  become: true

# Adjust PHP for Zabbix frontend
- name: Adjust PHP settings for Zabbix
  ansible.builtin.lineinfile:
    path: "{{ item.path }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { path: '/etc/php/{{ php_version }}/apache2/php.ini', regexp: '^max_execution_time', line: 'max_execution_time=300' }
    - { path: '/etc/php/{{ php_version }}/apache2/php.ini', regexp: '^memory_limit', line: 'memory_limit=128M' }
    - { path: '/etc/php/{{ php_version }}/apache2/php.ini', regexp: '^post_max_size', line: 'post_max_size=16M' }
    - { path: '/etc/php/{{ php_version }}/apache2/php.ini', regexp: '^upload_max_filesize', line: 'upload_max_filesize=2M' }
    - { path: '/etc/php/{{ php_version }}/apache2/php.ini', regexp: '^max_input_time', line: 'max_input_time=300' }
    - { path: '/etc/zabbix/apache.conf', regexp: '^\\s*php_value\\s*date.timezone\\s*.*', line: 'php_value date.timezone {{ zabbix_php_timezone }}' }
  become: true
  notify: Restart Apache
