---
- name: Update APT cache and upgrade all packages
  ansible.builtin.apt:
    upgrade: dist
    update_cache: true
  become: true

# Variables for region-based configurations
- name: Initialize VPN configuration based on region
  block:

  - name: Set CA password for region
    ansible.builtin.set_fact:
      easyrsa_ca_password: "{{ 'easyrsa_ca_password_vpn1_' + vpn_region }}"

  - name: Load VPN server variables for region
    ansible.builtin.include_vars:
      file: "vpn1-{{ vpn_region }}.yml"

  no_log: true
  when: vpn_region in ['eu', 'us']

# UFW Firewall
- name: Disable UFW (handled by AWS security groups)
  community.general.ufw:
    state: disabled
  when: firewall_disable
  become: true

- name: Install required packages
  ansible.builtin.package:
    name:
      - openvpn
      - easy-rsa
      - libpam-google-authenticator
    state: present
  become: true

# OpenVPN PKI Configuration
- name: Setup OpenVPN PKI directory
  ansible.builtin.file:
    path: "{{ easyrsa_pki_dir }}/"
    state: directory
  become: true

- name: Deploy EasyRSA configuration for OpenVPN
  ansible.builtin.template:
    src: easyrsa3_vars.j2
    dest: "{{ easyrsa_dir }}/vars"
    owner: root
    mode: 0600
  become: true

- name: Initialize OpenVPN PKI directory
  ansible.builtin.shell: echo 'yes' | ./easyrsa init-pki
  args:
    chdir: "{{ easyrsa_dir }}"
    creates: "{{ easyrsa_pki_path_keys }}"
  become: true

- name: Build OpenVPN Certificate Authority (CA)
  ansible.builtin.expect:
    command: ./easyrsa build-ca --req-cn "ca@{{ openvpn_server_common_name }}"
    responses:
      'Enter New CA Key Passphrase: $': "{{ easyrsa_ca_password }}"
      'Re-Enter New CA Key Passphrase: $': "{{ easyrsa_ca_password }}"
    chdir: "{{ easyrsa_dir }}"
    creates: "{{ easyrsa_pki_ca_key }}"
  become: true

- name: Generate OpenVPN Certificate Revocation List (CRL)
  ansible.builtin.expect:
    command: ./easyrsa gen-crl
    responses:
      'Enter pass phrase for .*?:$': "{{ easyrsa_ca_password }}"
    chdir: "{{ easyrsa_dir }}"
    creates: "{{ easyrsa_pki_crl }}"
  become: true

- name: Add OpenVPN server certificate
  ansible.builtin.expect:
    command: ./easyrsa build-server-full "server@{{ openvpn_server_common_name }}" nopass
    responses:
      'Enter pass phrase for .*?:$': "{{ easyrsa_ca_password }}"
    chdir: "{{ easyrsa_dir }}"
    creates: "{{ easyrsa_pki_server_key }}"
  become: true

# Google Authenticator Configuration
- name: Configure MFA using Google Authenticator
  block:

  - name: Create MFA service group for Google Authenticator
    ansible.builtin.group:
      name: "{{ gauth_group }}"
      state: present
      gid: 987

  - name: Create MFA service user for Google Authenticator
    ansible.builtin.user:
      name: "{{ gauth_username }}"
      comment: Google Authenticator service
      uid: 987
      group: "{{ gauth_group }}"

  - name: Create directory for MFA tokens
    ansible.builtin.file:
      path: "{{ gauth_dir }}"
      state: directory
      owner: "{{ gauth_username }}"
      group: "{{ gauth_group }}"
      mode: 0700

  - name: Configure PAM module configuration for Google Authenticator MFA
    ansible.builtin.template:
      src: openvpn_pam.j2
      dest: "{{ gauth_pam_file }}"
      owner: root
      group: root
      mode: 0644

  become: true

# OpenVPN System Configuration
- name: Enable IPv4 traffic forwarding
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
  become: true

- name: Setup OpenVPN client configuration directory
  ansible.builtin.file:
    path: "{{ openvpn_path_ccd }}"
    state: directory
    mode: 0755
  become: true

- name: Generate ta.key for OpenVPN
  ansible.builtin.command:
    cmd: "openvpn --genkey --secret ta-{{ openvpn_server_port }}.key"
    chdir: "{{ openvpn_path }}"
    creates: "{{ openvpn_ta_key }}"
  become: true

- name: Deploy OpenVPN server configuration
  ansible.builtin.template:
    src: openvpn_server.conf.j2
    dest: "{{ openvpn_path }}/{{ openvpn_server_proto }}-{{ openvpn_server_port }}.conf"
  notify: Restart openvpn
  become: true
