name: Build dev image
on:
  # Run manually.
  workflow_dispatch:
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch

jobs:
  build_dev_image:
    runs-on: ubuntu-latest

    steps:
      # Pass AWS credentials via GH secrets. This is needed to pull the Docker image
      # that will be used to run the action.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AM_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AM_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AM_AWS_DEFAULT_REGION }}

      # This is needed to pull the Docker image.
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Make everything accessible by any user to avoid permission errors.
      - name: Cleanup
        run: sudo chmod 777 -R .

      # Check out the code from GitHub so that we can run the action inside
      # the Docker container.
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.GH_ACTION_ACCESS_TOKEN }}

      # Install packages that are required to run the job via GH.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/gh_requirements.txt

      # Pull the latest Docker image to run the regressions on.
      - name: Pull image
        env:
          AM_ECR_BASE_PATH: ${{ secrets.AM_ECR_BASE_PATH }}
          # For now, we always get Docker images from AM account, so we don't need `CK_ECR_BASE_PATH`.
          # CK_ECR_BASE_PATH: ${{ secrets.CK_ECR_BASE_PATH }}
        run: invoke docker_pull

      # Set the PYTHONPATH so that Python can import the 1st party modules.
      # It is needed to run the QA tests.
      - name: Set the PYTHONPATH
        run: |
          echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      # Run the `invoke` target `docker_release_dev_image` to release the image.
      # See the corresponding documentation for more information.
      - name: Run 'docker_release_dev_image' workflow
        env:
          GH_ACTION_ACCESS_TOKEN: ${{ secrets.GH_ACTION_ACCESS_TOKEN }}
          AM_AWS_ACCESS_KEY_ID: ${{ secrets.AM_AWS_ACCESS_KEY_ID }}
          AM_AWS_SECRET_ACCESS_KEY: ${{ secrets.AM_AWS_SECRET_ACCESS_KEY }}
          AM_AWS_DEFAULT_REGION: ${{ secrets.AM_AWS_DEFAULT_REGION }}
          AM_ECR_BASE_PATH: ${{ secrets.AM_ECR_BASE_PATH }}
          AM_AWS_S3_BUCKET: ${{ secrets.AM_AWS_S3_BUCKET }}
          AM_TELEGRAM_TOKEN: ${{ secrets.AM_TELEGRAM_TOKEN }}
          CK_AWS_ACCESS_KEY_ID: ${{ secrets.CK_AWS_ACCESS_KEY_ID }}
          CK_AWS_SECRET_ACCESS_KEY: ${{ secrets.CK_AWS_SECRET_ACCESS_KEY }}
          CK_AWS_DEFAULT_REGION: ${{ secrets.CK_AWS_DEFAULT_REGION }}
          CK_AWS_S3_BUCKET: ${{ secrets.CK_AWS_S3_BUCKET }}
          CK_TELEGRAM_TOKEN: ${{ secrets.CK_TELEGRAM_TOKEN }}
        run: invoke docker_release_dev_image --version=FROM_CHANGELOG

      # Notify the team via Telegram in case of success.
      - name: Send Telegram notification for success
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.AM_TG_BUILDBOT_CHATID }}
          token: ${{ secrets.AM_TG_BUILDBOT_TOKEN }}
          message: |
            ðŸŽ‰ A new Docker image `cmamp` was successfully built. Please pull the new image.
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      # Notify the team via Telegram in case of failure.
      - name: Send Telegram notification for failure
        # Need to use ref_name as it contains the branch that triggered the
        # workflow run.
        # Alternative, head_ref is only available when the event that triggers a
        # workflow run is either pull_request or pull_request_target.
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.AM_TG_BUILDBOT_CHATID }}
          token: ${{ secrets.AM_TG_BUILDBOT_TOKEN }}
          message: |
            ðŸ§¨ IMAGE BUILD PROCESS FAILED
            Build failure '${{ github.workflow }}'
            Repo: '${{ github.repository }}'
            Branch: '${{ github.ref_name }}'
            Event: '${{ github.event_name }}'
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
