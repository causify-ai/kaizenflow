name: Update ECS prod task definition with newly created prod tag
on:
  # Run manually.
  workflow_dispatch:
      # User controlled inputs that will affect build flow.
     inputs:
        preprod_tag:
          description: Which preprod tag to re-tag as prod
          required: true
          type: string

jobs:
  create_new_ecs_task_def_revision:
    runs-on: ubuntu-latest

    steps:
      # Pass AWS credentials via GH secrets. This is needed to pull the Docker image
      # that will be used to run the action.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AM_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AM_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AM_AWS_DEFAULT_REGION }}

      # This is needed to pull the Docker image.
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Make everything accessible by any user to avoid permission errors.
      - name: Cleanup
        run: sudo chmod 777 -R .

      # Check out the code from GitHub so that we can run the action inside
      # the Docker container.
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.GH_ACTION_ACCESS_TOKEN }}

      # Install packages that are required to run the job via GH.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/gh_requirements.txt

      # Pull the latest Docker image to run the regressions on.
      - name: Pull image
        env:
          AM_ECR_BASE_PATH: ${{ secrets.AM_ECR_BASE_PATH }}
          # For now, we always get Docker images from AM account,
          # so we don't need `CK_ECR_BASE_PATH`.
          # CK_ECR_BASE_PATH: ${{ secrets.CK_ECR_BASE_PATH }}
        run: invoke docker_pull

      # Run the `invoke` target `docker_update_prod_task_definition` to update
      # prod task definition with the new prod image.
      # See the corresponding documentation for more information.
      - name: Run 'update_prod_task_definition_image' workflow
        env:
          GH_ACTION_ACCESS_TOKEN: ${{ secrets.GH_ACTION_ACCESS_TOKEN }}
          AM_AWS_ACCESS_KEY_ID: ${{ secrets.AM_AWS_ACCESS_KEY_ID }}
          AM_AWS_SECRET_ACCESS_KEY: ${{ secrets.AM_AWS_SECRET_ACCESS_KEY }}
          AM_AWS_DEFAULT_REGION: ${{ secrets.AM_AWS_DEFAULT_REGION }}
          AM_ECR_BASE_PATH: ${{ secrets.AM_ECR_BASE_PATH }}
          AM_AWS_S3_BUCKET: ${{ secrets.AM_AWS_S3_BUCKET }}
          AM_TELEGRAM_TOKEN: ${{ secrets.AM_TELEGRAM_TOKEN }}
          CK_AWS_ACCESS_KEY_ID: ${{ secrets.CK_AWS_ACCESS_KEY_ID }}
          CK_AWS_SECRET_ACCESS_KEY: ${{ secrets.CK_AWS_SECRET_ACCESS_KEY }}
          CK_AWS_DEFAULT_REGION: ${{ secrets.CK_AWS_DEFAULT_REGION }}
          CK_AWS_S3_BUCKET: ${{ secrets.CK_AWS_S3_BUCKET }}
          CK_TELEGRAM_TOKEN: ${{ secrets.CK_TELEGRAM_TOKEN }}
          PREPROD_TAG: ${{ inputs.preprod_tag }}
        run: invoke docker_update_prod_task_definition --version=FROM_CHANGELOG --preprod-tag=$PREPROD_TAG

      # TODO(Nikola): Notify in case of failure?
