name: Build production cmamp image
on:
  workflow_dispatch:

jobs:

  Build_image:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CK_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CK_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.CK_AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Cleanup
        run: sudo chmod 777 -R .

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.GH_ACTION_ACCESS_TOKEN }}

      - name: Authenticate GH
        run: |
          echo "${{ secrets.GH_ACTION_ACCESS_TOKEN }}" | gh auth login --hostname github.com --with-token

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/gh_requirements.txt

      - name: Pull image
        env:
          CK_ECR_BASE_PATH: ${{ secrets.CK_ECR_BASE_PATH }}
        run: invoke docker_pull

      - name: Run 'docker_release_prod_image' workflow
        env:
          GH_ACTION_ACCESS_TOKEN: ${{ secrets.GH_ACTION_ACCESS_TOKEN }}
          AM_AWS_ACCESS_KEY_ID: ${{ secrets.AM_AWS_ACCESS_KEY_ID }}
          AM_AWS_SECRET_ACCESS_KEY: ${{ secrets.AM_AWS_SECRET_ACCESS_KEY }}
          AM_AWS_DEFAULT_REGION: ${{ secrets.AM_AWS_DEFAULT_REGION }}
          AM_ECR_BASE_PATH: ${{ secrets.AM_ECR_BASE_PATH }}
          AM_AWS_S3_BUCKET: ${{ secrets.AM_AWS_S3_BUCKET }}
          AM_TELEGRAM_TOKEN: ${{ secrets.AM_TELEGRAM_TOKEN }}
          CK_AWS_ACCESS_KEY_ID: ${{ secrets.CK_AWS_ACCESS_KEY_ID }}
          CK_AWS_SECRET_ACCESS_KEY: ${{ secrets.CK_AWS_SECRET_ACCESS_KEY }}
          CK_AWS_DEFAULT_REGION: ${{ secrets.CK_AWS_DEFAULT_REGION }}
          CK_ECR_BASE_PATH: ${{ secrets.CK_ECR_BASE_PATH }}
          CK_AWS_S3_BUCKET: ${{ secrets.CK_AWS_S3_BUCKET }}
          CK_TELEGRAM_TOKEN: ${{ secrets.CK_TELEGRAM_TOKEN }}
        run: invoke docker_release_prod_image --version=FROM_CHANGELOG

      - name: Send Telegram notification for success
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.AM_TG_BUILDBOT_CHATID }}
          token: ${{ secrets.AM_TG_BUILDBOT_TOKEN }}
          message: |
            ðŸŽ‰ A new Docker production image `cmamp` was successfully built. Please pull the new image.
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Send Telegram notification for failure
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.AM_TG_BUILDBOT_CHATID }}
          token: ${{ secrets.AM_TG_BUILDBOT_TOKEN }}
          message: |
            ðŸ§¨ PRODUCTION IMAGE BUILD PROCESS FAILED
            Build failure '${{ github.workflow }}'
            Repo: '${{ github.repository }}'
            Branch: '${{ github.ref_name }}'
            Event: '${{ github.event_name }}'
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
