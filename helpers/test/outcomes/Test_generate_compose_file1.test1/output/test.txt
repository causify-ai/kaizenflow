use_privileged_mode=True, use_sibling_container=False, use_shared_cache=False, mount_as_submodule=False, use_network_mode_host=True
version: '3'

services:
  base_app:
    cap_add:
      - SYS_ADMIN
    environment:
      - AM_AWS_PROFILE=$AM_AWS_PROFILE
      - AM_ECR_BASE_PATH=$AM_ECR_BASE_PATH
      - AM_ENABLE_DIND=1
      - AM_FORCE_TEST_FAIL=$AM_FORCE_TEST_FAIL
      - AM_PUBLISH_NOTEBOOK_LOCAL_PATH=$AM_PUBLISH_NOTEBOOK_LOCAL_PATH
      - AM_S3_BUCKET=$AM_S3_BUCKET
      - AM_TELEGRAM_TOKEN=$AM_TELEGRAM_TOKEN
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - GH_ACTION_ACCESS_TOKEN=$GH_ACTION_ACCESS_TOKEN
      # This env var is used by GH Action to signal that we are inside the CI.
      - CI=$CI
    image: ${IMAGE}

    # This is needed:
    # - for Docker-in-docker (dind)
    # - to mount fstabs
    privileged: true

    restart: "no"
    volumes:
      # TODO(gp): We should pass the value of $HOME from dev.Dockerfile to here.
      # E.g., we might define $HOME in the env file.
      - ~/.aws:/home/.aws
      - ~/.config/gspread_pandas/:/home/.config/gspread_pandas/
      - ~/.config/gh:/home/.config/gh

  # Mount `amp` when it is used as supermodule.
  app:
    extends:
      base_app
    volumes:
      - ../../:/app

    # Default network mode set to host so we can reach e.g.
    # a database container pointing to localhost:5432.
    # In tests we use dind so we need set back to the default "bridge".
    # See CmTask988 and https://stackoverflow.com/questions/24319662
    network_mode: ${NETWORK_MODE:-host}

  jupyter_server:
    command: devops/docker_run/run_jupyter_server.sh
    environment:
      - PORT=${PORT}
    extends:
      app
    ports:
      # TODO(gp): Rename `AM_PORT`.
      - "${PORT}:${PORT}"

  # TODO(gp): For some reason the following doesn't work.
  #  jupyter_server_test:
  #    command: jupyter notebook -h 2>&1 >/dev/null
  #    extends:
  #      jupyter_server

  jupyter_server_test:
    command: jupyter notebook -h 2>&1 >/dev/null
    environment:
      - PORT=${PORT}
    extends:
      app
    ports:
      - "${PORT}:${PORT}"
