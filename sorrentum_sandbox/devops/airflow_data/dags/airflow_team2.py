# -*- coding: utf-8 -*-
"""Airflow_team2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KVq0YVc81-w8LO5f4VnTPRLWpdTXOnB0
"""

"""
DAG to download GitHub data from the API.
"""

import datetime

import airflow
from airflow.operators.bash import BashOperator

_DAG_ID = "download_periodic_1min_postgres_github"
_DAG_DESCRIPTION = (
    "Download GitHub data every minute and save to Postgres"
)
# Specify when often to execute the DAG.
_SCHEDULE = "* * * * *"

# Pass default parameters for the DAG.
default_args = {
    "owner": "airflow",
    "depends_on_past": False,
    "email": ["airflow@example.com"],
    "email_on_failure": False,
    "email_on_retry": False,
    "retries": 0,
}

# Create a DAG.
dag = airflow.DAG(
    dag_id=_DAG_ID,
    description=_DAG_DESCRIPTION,
    max_active_runs=1,
    default_args=default_args,
    schedule_interval=_SCHEDULE,
    catchup=False,
    start_date=datetime.datetime(2023, 4, 10, 0, 0, 0),
)

bash_command = [
    # Sleep 5 seconds to ensure the bar is finished.
    "sleep 5",
    "&&",
    "/cmamp/sorrentum_sandbox/examples/ml_projects/SorrIssue21_Team2_Implement_sandbox_for_GitHub_2/download_to_db_team2.py"	
    "--pair BTC",
    "--target_table 'github_commits'",
    "--start_timestamp {{ data_interval_start }} ",
    "--end_timestamp {{ data_interval_end }}",
    "-v DEBUG"
]

downloading_task = BashOperator(
    task_id="download.periodic_1min.postgres.github",
    depends_on_past=False,
    bash_command=" ".join(bash_command),
    dag=dag,
)

downloading_task
