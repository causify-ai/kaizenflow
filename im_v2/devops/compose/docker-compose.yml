version: '3.5'

services:
#  # TODO(Grisha): drop `im_app` CMTask #630.
#  # Docker container running code that talks to the DB.
#  im_app:
#    # TODO(Grisha): Use image env var.
#    # TODO(Grisha): for image name use `get_docker_base_image_name`() from `repo_config.py`.
#    image: 665840871993.dkr.ecr.us-east-1.amazonaws.com/cmamp:dev
#    environment:
#      - AM_AWS_PROFILE=$AM_AWS_PROFILE
#      - AM_S3_BUCKET=$AM_S3_BUCKET
#      - ENV_NAME=venv
#    restart: "no"
#    depends_on:
#      - im_postgres_local
#    volumes:
#      - ../../../:/app
#      - ~/.aws:/home/.aws
#    env_file:
#      - ../env/local.im_db_config.env
#    working_dir: /app
#    entrypoint: /app/devops/docker_run/entrypoint.sh

  # Docker container running Postgres DB.
  im_postgres:
    image: postgres:13
    restart: "no"
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - im_postgres_data:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}

volumes:
  im_postgres_data: {}

networks:
  default:
    name: im_postgres_network